{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "id": "SnRO2rWG6T5O"
   },
   "outputs": [],
   "source": [
    "import openpyxl as opl\n",
    "import requests as rq\n",
    "import json\n",
    "import sys\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "id": "raVk0g9uOAWC"
   },
   "outputs": [],
   "source": [
    "#coletando cotação CAD/BRL\n",
    "requisição = rq.get('http://economia.awesomeapi.com.br/json/last/CAD-BRL')\n",
    "cotacaocadbrl = requisição.json()\n",
    "finalcotacaocadbrl = (float(cotacaocadbrl['CADBRL']['bid']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "ViCulV6jPczS",
    "outputId": "9590e380-9ad2-4449-fe5e-21db6eced406"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7493\n"
     ]
    }
   ],
   "source": [
    "#Iniciando cálculo para chegar em CAD/COP, já que o API não suporta essa cotação\n",
    "\n",
    "#Coletando cotação CAD/USD\n",
    "requisicao1 = rq.get('http://economia.awesomeapi.com.br/json/last/CAD-USD')\n",
    "cadusd = requisicao1.json()\n",
    "valorcadusd = float(cadusd['CADUSD']['bid'])\n",
    "print(valorcadusd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "oLwLVboKRKVS",
    "outputId": "57d8ba6f-1bcc-4259-94c0-9f84cdaaade6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4558.75\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Coletando cotação USD/COP\n",
    "requisicao2 = rq.get('http://economia.awesomeapi.com.br/json/last/USD-COP')\n",
    "usdcop = requisicao2.json()\n",
    "valorusdcop = float(usdcop['USDCOP']['bid'])\n",
    "print(valorusdcop)\n",
    "type(valorusdcop)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "9dpV2oQoRNeS",
    "outputId": "4b1d7487-0800-4a35-9040-7ce6d6892959"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3415.8713749999997\n"
     ]
    }
   ],
   "source": [
    "#Obtendo cotação CAD/COP\n",
    "copfinal = (float(valorcadusd))*(float(valorusdcop))\n",
    "print(copfinal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "GXqUHwSi4r97",
    "outputId": "0193db11-c473-4baf-f480-3cfaad3f9e32",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello! Welcome to visa express assesment\n",
      "What country are you from? Colombia\n",
      "Where are you going? Canada\n",
      "For how long (in months)? 6\n",
      "How much is your tuition in dollars 5000\n",
      "Ok! Here is what you need:\n",
      "You will need at least 9,998 dollars in your account\n",
      "The current exchange rate is: COP 3,415.8714 and the minimum amount in your currency is COP 34,151,882.01\n",
      "you will also need to present academic and labour ties\n",
      "Do you have a sponsor? yes\n",
      "Provide the following: \n",
      " sponsor letter \n",
      " sponsor bank statement from the last three months \n",
      " IRS declaration \n",
      " labor certificate with the 3 last payslips\n",
      "Do you have any second degree? yes\n",
      "You will need to provide a diploma of your highest degree\n",
      "Do you currently work?yes\n",
      "Please also provide your labor certificate and three last payslips\n",
      "After sending your documents to our staff please make sure to ask which will need to have a certified translation\n"
     ]
    }
   ],
   "source": [
    "#Área de preparação das variáveis para o programa\n",
    "func_finsupport = lambda x,y: (833 * x) + y\n",
    "func_cotacaobr = lambda x,y: (x*y)\n",
    "requisição = rq.get('http://economia.awesomeapi.com.br/json/last/CAD-BRL')\n",
    "cotacao = requisição.json()\n",
    "var_canada = ['Canada','CAN','can','canada','CANADA']\n",
    "var_brasil = ['Brasil','brasil','BRASIL','Brazil','brazil','BRAZIL','br','BR']\n",
    "var_colombia = ['Colombia','COLOMBIA','colombia','COL','col']\n",
    "var_australia = ['Australia','australia','aus','AUS']\n",
    "var_usa = ['EE.UU','EEUU','USA','UNITED STATES','United States','united states','USA','usa','EUA','eua']\n",
    "#iniciando o programa\n",
    "print('Hello! Welcome to visa express assesment')\n",
    "nationality = input('What country are you from? ')\n",
    "country = input('Where are you going? ')\n",
    "#abrindo a condição para escolha Canada\n",
    "if country in var_canada:\n",
    "    course_lenght = eval(input('For how long (in months)? '))\n",
    "    tuition_value = eval(input('How much is your tuition in dollars '))\n",
    "    print('Ok! Here is what you need:')\n",
    "    finsuppCAD = func_finsupport(course_lenght, tuition_value)\n",
    "    print(f'You will need at least {finsuppCAD:,}', 'dollars in your account')\n",
    "#definindo cotação em real    \n",
    "    if nationality in var_brasil:\n",
    "      brlfinal = (func_cotacaobr(finalcotacaocadbrl,finsuppCAD))\n",
    "      print(f'The current exchange rate is: R$ {finalcotacaocadbrl} and minimum amount in your currency is R$ {brlfinal:,.2f}')\n",
    "#definindo cotação em COP\n",
    "    elif nationality == 'Colombia' or 'colombia' or 'Col' or 'COL':\n",
    "      copfinalformat = func_cotacaobr(copfinal,finsuppCAD)\n",
    "      print(f'The current exchange rate is: COP {copfinal:,.4f} and the minimum amount in your currency is COP {copfinalformat:,.2f}')\n",
    "#mensagem extra      \n",
    "    print('you will also need to present academic and labour ties')\n",
    "#analisando presença de sponsor    \n",
    "    sponsor_support = input('Do you have a sponsor? ')\n",
    "#sponsor positivo\n",
    "    if sponsor_support == 'Yes' or sponsor_support =='yes'or sponsor_support =='y':\n",
    "      print('Provide the following: \\n sponsor letter \\n sponsor bank statement from the last three months \\n IRS declaration \\n labor certificate with the 3 last payslips')\n",
    "#sponsor negativo      \n",
    "    else:\n",
    "      print('Provide your bank statement from the last three months with the above mentioned amount and IRS declaration')\n",
    "#analisando suporte academico      \n",
    "    academic_support = input('Do you have any second degree? ')\n",
    "#suporte academido de nível superior positivo    \n",
    "    if academic_support == 'Yes' or academic_support =='yes'or academic_support =='y':\n",
    "        print('You will need to provide a diploma of your highest degree')\n",
    "#suporte de nível academico superior negativo        \n",
    "    else:\n",
    "        print('Please present any certificate of studies')\n",
    "#analisando suporte laboral        \n",
    "    labor_support = input('Do you currently work?'  )\n",
    "#suporte laboral positivo    \n",
    "    if labor_support == 'Yes' or labor_support =='yes'or labor_support =='y':\n",
    "      print('Please also provide your labor certificate and three last payslips')\n",
    "#abrindo condição para Australia      \n",
    "elif country in var_australia:\n",
    "#Brasil e Colombia passam pelas mesmas condições  \n",
    "  if nationality in var_brasil or nationality in var_colombia:\n",
    "        print('You only need: \\n - COE\\n - Health insurance \\n - GTE letter')\n",
    "#abrindo condição para Estados Unidos\n",
    "elif country in var_usa:\n",
    "        print('Ask for your online form')       \n",
    "#retorno, caso o aluno seja de um país diferente        \n",
    "else: \n",
    "    print('Please check with one of our staff what are the requirements for your country')\n",
    "print('After sending your documents to our staff please make sure to ask which will need to have a certified translation')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
